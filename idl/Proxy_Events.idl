/* -*- C++ -*-
 * Copyright (C) 2009 Trinity Core <http://www.trinitycore.org>
 * Copyright (C) 2012 Morpheus
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

/**
 *  @file
 *  @brief   Interface Definition for structures used when communicating between Realm and Proxy nodes.
 *  @author  raczman <raczman@gmail.cm>
 *  @date    2009-11-11
 *
 */

module Morpheus
{

    /**
     *  @brief  Proxy nodes sends that when announcing
     *          their presence/load, either requested or not.
     */
    struct Proxy_Announce
    {
        /**
         *  @brief  ID of realm zone works on.
         */
        unsigned short realm_id;

        /**
         *  @brief  Address of proxy node, in ip:port form.
         *          This is proxy's unique ID.
         */
        string address;

        /**
         *  @brief  Load of the proxy, connections / ConnectionLimit.
         */
        float load;
    };

    /**
     *  @brief  Realm node sends that to request Proxy_Announce.
     */
    struct Proxy_Request
    {
        unsigned short realm_id;
    };

    /**
     *  @brief  Broadcast that this proxy is shutdowned.
     */
    struct Proxy_Shutdowned
    {
        /**
         *  @brief  Proxy ID.
         *          Tells that which proxy shutdowned.
         */
        string address;
    };

};
